1. [13. 字符串查找]
描述:
对于一个给定的 source 字符串和一个 target 字符串，你应该在 source 字符串中找出 target 字符串出现的第一个位置(从0开始)。如果不存在，则返回 -1。
样例:
如果 source = "source" 和 target = "target"，返回 -1。
如果 source = "abcdabcdefg" 和 target = "bcd"，返回 1。
挑战 :
O(n2)的算法是可以接受的。如果你能用O(n)的算法做出来那更加好。（提示：KMP）

2. 代码
public class Solution {
    /*
     * @param source: source string to be scanned.
     * @param target: target string containing the sequence of characters to match
     * @return: a index to the first occurrence of target in source, or -1  if target is not part of source.
     */
    public int strStr(String source, String target) {
        // write your code here
        return helper1(source, target);
    }
    
    private static int helper1(String source, String target) {
        if (source == null || target == null) {
            return -1;
        }
        if (source == target) {
            return 0;
        }
        if (source.length() < target.length()) {
            return -1;
        }
        if (target.isEmpty()) {
            return 0;
        }
        // 分析目标字符串规律
        boolean[] targetArray = helper2(target);
        for (int i = 0; i <= source.length() - target.length();) {
            int k = i;
            int j = 0;
            for (; j < target.length(); k++, j++) {
                if (source.charAt(k) != target.charAt(j)) {
                    break;
                }
            }
            if (j == target.length()) {
                return i;
            }
            if (targetArray[j]) {
                i = k + 1;
            } else {
                i = k;
            }
        }
        return -1;
    }

    private static boolean[] helper2(String target) {
        char c = target.charAt(0);
        int targetLength = target.length();
        boolean[] targetArray = new boolean[targetLength];
        for (int i = 0; i < targetLength; i++) {
            if (c == target.charAt(i)) {
                targetArray[i] = true;
            } else {
                targetArray[i] = false;
            }
        }
        return targetArray;
    }
}
